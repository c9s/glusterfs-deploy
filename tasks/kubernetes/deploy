#!/bin/bash
source ./tasks/gce/config

# $HEKETI_JWT_USER_SECRET
# $HEKETI_JWT_ADMIN_SECRET


mkdir -p deployments/$DEPLOYMENT_ID/kubernetes

function heketi_generate_kubernetes_secret()
{
    local kube_ns=default
    local secret=$(echo -n $HEKETI_JWT_ADMIN_SECRET | base64)
    local yaml_file="deployments/$DEPLOYMENT_ID/kubernetes/00_heketi-secret.yml"
    cat <<YAML > $yaml_file
---
apiVersion: v1
kind: Secret
type: kubernetes.io/glusterfs
metadata:
  name: heketi-admin-secret
  namespace: "$kube_ns"
data:
  key: "$secret"
YAML
    echo $yaml_file
}

function heketi_generate_kubernetes_storageclass()
{
    local name=$1
    local volumetype=$2

    if [[ -z "$volumetype" ]]
    then
        volumetype=none
    fi
    local yaml_file=$(asset kubernetes/01-heketi-sc-$name.yml)
    # local heketi_ip=$(gcloud:instance_network_ip "$HEKETI_INSTANCE")
    local heketi_ip=$(gcloud:instance_external_ip "$HEKETI_INSTANCE")
    local heketi_cli_server=http://$heketi_ip:8080

    local kube_ns=default

    cat <<YAML > $yaml_file
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "$name"
provisioner: kubernetes.io/glusterfs
parameters:
  # The IP address of your CGE Instance which is running Heketi
  resturl: "$heketi_cli_server"
  restauthenabled: "true"
  restuser: "admin"
  secretNamespace: "$kube_ns"
  secretName: "heketi-admin-secret"
  volumetype: $volumetype
YAML
    echo $yaml_file
}

function gcloud_generate_kubernets_storage_class()
{
    local name=$1
    local type=$2
    local yaml_file=$(asset kubernetes/01-heketi-sc-$name.yml)

    cat <<YAML > $yaml_file
# Copyright 2017, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: $name
provisioner: kubernetes.io/gce-pd
parameters:
  type: $type
YAML
    echo $yaml_file
}

declare -a yaml_files=()

GLUSTERFS_VOLUME_TYPE=none

yaml_files+=($(heketi_generate_kubernetes_secret))
yaml_files+=($(gcloud_generate_kubernets_storage_class slow-one pd-standard))
yaml_files+=($(gcloud_generate_kubernets_storage_class fast-one pd-ssd))
yaml_files+=($(heketi_generate_kubernetes_storageclass glustersc $GLUSTERFS_VOLUME_TYPE))
yaml_files+=($(heketi_generate_kubernetes_storageclass slow $GLUSTERFS_VOLUME_TYPE))
yaml_files+=($(heketi_generate_kubernetes_storageclass slow-many $GLUSTERFS_VOLUME_TYPE))
yaml_files+=($(heketi_generate_kubernetes_storageclass fast-many $GLUSTERFS_VOLUME_TYPE))

for yaml_file in "${yaml_files[@]}"
do
    info "kubectl" "applying $yaml_file"
    kubectl apply -f $yaml_file
done
